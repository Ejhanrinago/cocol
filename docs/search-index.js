crystal_doc_search_index_callback({"repository_name":"gitlab.com/cocol/cocol","body":"# COCOL!\n\n![Stability Experimental](https://img.shields.io/badge/Stability-Experimental-orange.svg?style=flat-square) ![Crystal 0.27.2](https://img.shields.io/badge/Crystal-0.27.2-blue.svg?style=flat-square&link=https://crystal-lang.org&link=https://crystal-lang.org/api/0.27.2/) ![License MPL-2.0](https://img.shields.io/badge/License-MPL--2.0-green.svg?style=flat-square)\n\n---\n\n  ![https://github.com/cocol-project/cocol/blob/master/img/demo2.gif](https://github.com/cocol-project/cocol/blob/master/img/demo2.gif)\n\n---\n\n## About üåê\nThe Cocol Project has the goal to lower the entry barrier for developers interested in building blockchains and dApps.\nThere is still a long way to go and your help is needed.\n\n## Installation üèπ\nCocol is written in [Crystal](https://crystal-lang.org/), so make sure to follow the [installation instructions](https://crystal-lang.org/reference/installation/) first.\n\nAfter setting up Crystal you can clone the Cocol repository and install the dependencies:\n```shell\n> git clone https://gitlab.com/cocol/cocol.git\n> cd cocol\n> shards install\n```\n\n## Usage ‚öî\nMake your changes to the code-base and than build Cocol\n```shell\n> shards build\n```\nThe binary `./bin/cocol` offers the following CLI options\n\n```text\nOptions:\n\n-p --port            The port your Cocol node is going to run on\n-m --master          Making this node a master (there can only be one)\n--max-connections    Setting the max-connections for peers.\n--miner              Making this node a miner\n--update             Triggering an update on launch (will catch up with the current height)\n\n```\n\nThere is also a script that starts multiple nodes and the master for you\n\n```shell\n> ./script/start.sh 66 5\n```\nFirst number is the amount of nodes and the second max-connections per node.\nIt will start the master node with the port `3000` and every other node with `3000 + n`\n\n\nYou can now start one or several miner like this:\n```shell\n> ./cocol -p 4100 --max-connections 5 --miner\n```\n\nNow go ahead and open the explorer in a browser:\n```shell\n> open ./explorer/index.html\n```\n\nYou should see 66 nodes and a miner (red border)\n\nEach one of the nodes has a REST API on the corresponding port (e.g. `3001`)\n\nYou can create transactions or query the current ledger\n\n## Development üë®‚Äçüíªüë©‚Äçüíª\n\nCocol is in a very early stage. Expect changes, bugs and messy code.\n\n## Contributing üë∑‚Äç‚ôÇÔ∏èüë∑‚Äç‚ôÄÔ∏è\n\n1. Fork it ( https://github.com/cocol-project/cocol/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- github: [cserb](https://github.com/cserb) | twitter: [@cerbivore](http://twitter.com/cerbivore) | Cristian »òerb - creator, maintainer\n","program":{"html_id":"gitlab.com/cocol/cocol/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"gitlab.com/cocol/cocol","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"gitlab.com/cocol/cocol/CLI","path":"CLI.html","kind":"module","full_name":"CLI","name":"CLI","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/cli/argument.cr","line_number":3,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/cli/argument.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"gitlab.com/cocol/cocol/CLI/Argument","path":"CLI/Argument.html","kind":"class","full_name":"CLI::Argument","name":"Argument","abstract":false,"superclass":{"html_id":"gitlab.com/cocol/cocol/Optarg/Model","kind":"class","full_name":"Optarg::Model","name":"Model"},"ancestors":[{"html_id":"gitlab.com/cocol/cocol/Optarg/Model","kind":"class","full_name":"Optarg::Model","name":"Model"},{"html_id":"gitlab.com/cocol/cocol/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"gitlab.com/cocol/cocol/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cocol/cli/argument.cr","line_number":3,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/cli/argument.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/CLI","kind":"module","full_name":"CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"command-instance-method","html_id":"command-instance-method","name":"command","doc":"Returns the COMMAND argument value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the COMMAND argument value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"command","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringArgument::Typed::Type][\"command\"]"}},{"id":"command?-instance-method","html_id":"command?-instance-method","name":"command?","doc":"Returns the COMMAND argument value.\n\nReturns nil, if the value is undefined.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the COMMAND argument value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"command?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringArgument::Typed::Type][\"command\"]?"}},{"id":"m?-instance-method","html_id":"m?-instance-method","name":"m?","doc":"Returns the -m option value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the -m option value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"m?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!self[::Optarg::Definitions::BoolOption::Typed::Type][\"-m\"]?)"}},{"id":"master?-instance-method","html_id":"master?-instance-method","name":"master?","doc":"Returns the -m option value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the -m option value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"master?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!self[::Optarg::Definitions::BoolOption::Typed::Type][\"-m\"]?)"}},{"id":"max_connections-instance-method","html_id":"max_connections-instance-method","name":"max_connections","doc":"Returns the --max-connections option value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the --max-connections option value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"max_connections","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringOption::Typed::Type][\"--max-connections\"]"}},{"id":"max_connections?-instance-method","html_id":"max_connections?-instance-method","name":"max_connections?","doc":"Returns the --max-connections option value.\n\nReturns nil, if the value is undefined.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the --max-connections option value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"max_connections?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringOption::Typed::Type][\"--max-connections\"]?"}},{"id":"miner?-instance-method","html_id":"miner?-instance-method","name":"miner?","doc":"Returns the --miner option value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the --miner option value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"miner?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!self[::Optarg::Definitions::BoolOption::Typed::Type][\"--miner\"]?)"}},{"id":"p-instance-method","html_id":"p-instance-method","name":"p","doc":"Returns the -p option value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the -p option value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"p","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringOption::Typed::Type][\"-p\"]"}},{"id":"p?-instance-method","html_id":"p?-instance-method","name":"p?","doc":"Returns the -p option value.\n\nReturns nil, if the value is undefined.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the -p option value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"p?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringOption::Typed::Type][\"-p\"]?"}},{"id":"port-instance-method","html_id":"port-instance-method","name":"port","doc":"Returns the -p option value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the -p option value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringOption::Typed::Type][\"-p\"]"}},{"id":"port?-instance-method","html_id":"port?-instance-method","name":"port?","doc":"Returns the -p option value.\n\nReturns nil, if the value is undefined.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the -p option value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"port?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[::Optarg::Definitions::StringOption::Typed::Type][\"-p\"]?"}},{"id":"update?-instance-method","html_id":"update?-instance-method","name":"update?","doc":"Returns the --update option value.\n\nThis method is automatically defined by the optarg library.","summary":"<p>Returns the --update option value.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"update?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(!self[::Optarg::Definitions::BoolOption::Typed::Type][\"--update\"]?)"}}],"macros":[],"types":[{"html_id":"gitlab.com/cocol/cocol/CLI/Argument/Parser","path":"CLI/Argument/Parser.html","kind":"class","full_name":"CLI::Argument::Parser","name":"Parser","abstract":false,"superclass":{"html_id":"gitlab.com/cocol/cocol/Optarg/Parser","kind":"class","full_name":"Optarg::Parser","name":"Parser"},"ancestors":[{"html_id":"gitlab.com/cocol/cocol/Optarg/Parser","kind":"class","full_name":"Optarg::Parser","name":"Parser"},{"html_id":"gitlab.com/cocol/cocol/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"gitlab.com/cocol/cocol/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cocol/cli/argument.cr","line_number":3,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/cli/argument.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/CLI/Argument","kind":"class","full_name":"CLI::Argument","name":"Argument"},"doc":"The dedicated Optarg::Parser subclass for the `Argument` class.\n\nThis class is automatically defined by the optarg library.","summary":"<p>The dedicated Optarg::Parser subclass for the <code><a href=\"../../CLI/Argument.html\">Argument</a></code> class.</p>","class_methods":[{"id":"after_validate(name,proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-class-method","html_id":"after_validate(name,proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"args_string":"(name, proc : ::Proc(CLI::Argument::Parser, CLI::Argument, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, name)"}},{"id":"after_validate(proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-class-method","html_id":"after_validate(proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"args_string":"(proc : ::Proc(CLI::Argument::Parser, CLI::Argument, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, nil)"}},{"id":"after_validate(name=nil,&block:CLI::Argument::Parser,CLI::Argument->Nil)-class-method","html_id":"after_validate(name=nil,&amp;block:CLI::Argument::Parser,CLI::Argument-&gt;Nil)-class-method","name":"after_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : CLI::Argument::Parser, CLI::Argument -> Nil)","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::CLI::Argument::Parser, ::CLI::Argument -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::CLI::Argument::Parser, _2 : ::CLI::Argument) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__after(proc, name)\n"}},{"id":"around_validate(name,proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-class-method","html_id":"around_validate(name,proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"args_string":"(name, proc : ::Proc(CLI::Argument::Parser, CLI::Argument, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, name)"}},{"id":"around_validate(proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-class-method","html_id":"around_validate(proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"args_string":"(proc : ::Proc(CLI::Argument::Parser, CLI::Argument, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, nil)"}},{"id":"around_validate(name=nil,&block:CLI::Argument::Parser,CLI::Argument->Nil)-class-method","html_id":"around_validate(name=nil,&amp;block:CLI::Argument::Parser,CLI::Argument-&gt;Nil)-class-method","name":"around_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : CLI::Argument::Parser, CLI::Argument -> Nil)","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::CLI::Argument::Parser, ::CLI::Argument -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::CLI::Argument::Parser, _2 : ::CLI::Argument) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__around(proc, name)\n"}},{"id":"before_validate(name,proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-class-method","html_id":"before_validate(name,proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"args_string":"(name, proc : ::Proc(CLI::Argument::Parser, CLI::Argument, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, name)"}},{"id":"before_validate(proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-class-method","html_id":"before_validate(proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"args_string":"(proc : ::Proc(CLI::Argument::Parser, CLI::Argument, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, nil)"}},{"id":"before_validate(name=nil,&block:CLI::Argument::Parser,CLI::Argument->Nil)-class-method","html_id":"before_validate(name=nil,&amp;block:CLI::Argument::Parser,CLI::Argument-&gt;Nil)-class-method","name":"before_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : CLI::Argument::Parser, CLI::Argument -> Nil)","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::CLI::Argument::Parser, ::CLI::Argument -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::CLI::Argument::Parser, _2 : ::CLI::Argument) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__before(proc, name)\n"}},{"id":"on_validate(name,proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-class-method","html_id":"on_validate(name,proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"args_string":"(name, proc : ::Proc(CLI::Argument::Parser, CLI::Argument, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, name)"}},{"id":"on_validate(proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-class-method","html_id":"on_validate(proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"args_string":"(proc : ::Proc(CLI::Argument::Parser, CLI::Argument, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, nil)"}},{"id":"on_validate(name=nil,&block:CLI::Argument::Parser,CLI::Argument->Nil)-class-method","html_id":"on_validate(name=nil,&amp;block:CLI::Argument::Parser,CLI::Argument-&gt;Nil)-class-method","name":"on_validate","doc":"Registers a callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : CLI::Argument::Parser, CLI::Argument -> Nil)","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::CLI::Argument::Parser, ::CLI::Argument -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::CLI::Argument::Parser, _2 : ::CLI::Argument) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__on(proc, name)\n"}}],"constructors":[],"instance_methods":[{"id":"after_validate(name,proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-instance-method","html_id":"after_validate(name,proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"args_string":"(name, proc : ::Proc(CLI::Argument::Parser, CLI::Argument, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, name)"}},{"id":"after_validate(proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-instance-method","html_id":"after_validate(proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"args_string":"(proc : ::Proc(CLI::Argument::Parser, CLI::Argument, Nil))","source_link":null,"def":{"name":"after_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__after(proc, nil)"}},{"id":"after_validate(name=nil,&block:CLI::Argument::Parser,CLI::Argument->Nil)-instance-method","html_id":"after_validate(name=nil,&amp;block:CLI::Argument::Parser,CLI::Argument-&gt;Nil)-instance-method","name":"after_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : CLI::Argument::Parser, CLI::Argument -> Nil)","source_link":null,"def":{"name":"after_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::CLI::Argument::Parser, ::CLI::Argument -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::CLI::Argument::Parser, _2 : ::CLI::Argument) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__after(proc, name)\n"}},{"id":"around_validate(name,proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-instance-method","html_id":"around_validate(name,proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"args_string":"(name, proc : ::Proc(CLI::Argument::Parser, CLI::Argument, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, name)"}},{"id":"around_validate(proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-instance-method","html_id":"around_validate(proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"args_string":"(proc : ::Proc(CLI::Argument::Parser, CLI::Argument, Nil))","source_link":null,"def":{"name":"around_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__around(proc, nil)"}},{"id":"around_validate(name=nil,&block:CLI::Argument::Parser,CLI::Argument->Nil)-instance-method","html_id":"around_validate(name=nil,&amp;block:CLI::Argument::Parser,CLI::Argument-&gt;Nil)-instance-method","name":"around_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : CLI::Argument::Parser, CLI::Argument -> Nil)","source_link":null,"def":{"name":"around_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::CLI::Argument::Parser, ::CLI::Argument -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::CLI::Argument::Parser, _2 : ::CLI::Argument) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__around(proc, name)\n"}},{"id":"before_validate(name,proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-instance-method","html_id":"before_validate(name,proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"args_string":"(name, proc : ::Proc(CLI::Argument::Parser, CLI::Argument, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, name)"}},{"id":"before_validate(proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-instance-method","html_id":"before_validate(proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"args_string":"(proc : ::Proc(CLI::Argument::Parser, CLI::Argument, Nil))","source_link":null,"def":{"name":"before_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__before(proc, nil)"}},{"id":"before_validate(name=nil,&block:CLI::Argument::Parser,CLI::Argument->Nil)-instance-method","html_id":"before_validate(name=nil,&amp;block:CLI::Argument::Parser,CLI::Argument-&gt;Nil)-instance-method","name":"before_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : CLI::Argument::Parser, CLI::Argument -> Nil)","source_link":null,"def":{"name":"before_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::CLI::Argument::Parser, ::CLI::Argument -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::CLI::Argument::Parser, _2 : ::CLI::Argument) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__before(proc, name)\n"}},{"id":"callback_results_for_validate-instance-method","html_id":"callback_results_for_validate-instance-method","name":"callback_results_for_validate","doc":"Returns callback results of the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Returns callback results of the validate group.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"callback_results_for_validate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@callback_results[\"validate\"]? || (@callback_results[\"validate\"] = ::Callback::ResultSet(::Nil).new)).as(::Callback::ResultSet(::Nil))"}},{"id":"data:CLI::Argument-instance-method","html_id":"data:CLI::Argument-instance-method","name":"data","doc":"Returns a target model instance.","summary":"<p>Returns a target model instance.</p>","abstract":false,"args":[],"args_string":" : CLI::Argument","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/cli/argument.cr#L3","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::CLI::Argument","visibility":"Public","body":"@data.as(::CLI::Argument)"}},{"id":"on_validate(name,proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-instance-method","html_id":"on_validate(name,proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"args_string":"(name, proc : ::Proc(CLI::Argument::Parser, CLI::Argument, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, name)"}},{"id":"on_validate(proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-instance-method","html_id":"on_validate(proc:::Proc(CLI::Argument::Parser,CLI::Argument,Nil))-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"args_string":"(proc : ::Proc(CLI::Argument::Parser, CLI::Argument, Nil))","source_link":null,"def":{"name":"on_validate","args":[{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"::Proc(::CLI::Argument::Parser, ::CLI::Argument, ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"append_callback_for_validate__on(proc, nil)"}},{"id":"on_validate(name=nil,&block:CLI::Argument::Parser,CLI::Argument->Nil)-instance-method","html_id":"on_validate(name=nil,&amp;block:CLI::Argument::Parser,CLI::Argument-&gt;Nil)-instance-method","name":"on_validate","doc":"Registers a dynamic callback for the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Registers a dynamic callback for the validate group.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"args_string":"(name = <span class=\"n\">nil</span>, &block : CLI::Argument::Parser, CLI::Argument -> Nil)","source_link":null,"def":{"name":"on_validate","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(::CLI::Argument::Parser, ::CLI::Argument -> ::Nil)"},"return_type":"","visibility":"Public","body":"proc = ->(_1 : ::CLI::Argument::Parser, _2 : ::CLI::Argument) do\n  block.call(_1, _2)\nend\nappend_callback_for_validate__on(proc, name)\n"}},{"id":"run_callbacks_for_validate(*args,&block)-instance-method","html_id":"run_callbacks_for_validate(*args,&amp;block)-instance-method","name":"run_callbacks_for_validate","doc":"Invokes all callbacks of the validate group.\n\nThis method is automatically defined by the Crystal Callback library.","summary":"<p>Invokes all callbacks of the validate group.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, &block)","source_link":null,"def":{"name":"run_callbacks_for_validate","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"results = renew_callback_results_for_validate\nrun_callbacks_for_validate__before(results, self, *args)\nrun_callbacks_for_validate__around(results, self, *args)\nrun_callbacks_for_validate__on(results, self, *args)\nresult = yield results\nrun_callbacks_for_validate__around(results, self, *args)\nrun_callbacks_for_validate__after(results, self, *args)\nresult\n"}}],"macros":[],"types":[]}]},{"html_id":"gitlab.com/cocol/cocol/CLI/Logger","path":"CLI/Logger.html","kind":"class","full_name":"CLI::Logger","name":"Logger","abstract":false,"superclass":{"html_id":"gitlab.com/cocol/cocol/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"gitlab.com/cocol/cocol/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"gitlab.com/cocol/cocol/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cocol/cli/logger.cr","line_number":1,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/cli/logger.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/CLI","kind":"module","full_name":"CLI","name":"CLI"},"doc":null,"summary":null,"class_methods":[{"id":"info(message:String)-class-method","html_id":"info(message:String)-class-method","name":"info","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(message : String)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/cli/logger.cr#L2","def":{"name":"info","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"puts(\"\\e[2K\\r #{message}\")\nprint(\"> \")\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"gitlab.com/cocol/cocol/Cocol","path":"Cocol.html","kind":"module","full_name":"Cocol","name":"Cocol","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol.cr","line_number":17,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol.cr"},{"filename":"cocol/version.cr","line_number":1,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/version.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"gitlab.com/cocol/cocol/Cocol/App","path":"Cocol/App.html","kind":"class","full_name":"Cocol::App","name":"App","abstract":false,"superclass":{"html_id":"gitlab.com/cocol/cocol/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"gitlab.com/cocol/cocol/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"gitlab.com/cocol/cocol/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cocol.cr","line_number":17,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Cocol","kind":"module","full_name":"Cocol","name":"Cocol"},"doc":null,"summary":null,"class_methods":[{"id":"block_creation_loop-class-method","html_id":"block_creation_loop-class-method","name":"block_creation_loop","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol.cr#L32","def":{"name":"block_creation_loop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"threshold = 2\nloop do\n  sleep(1)\n  pending_transactions_count = (pending_transactions = Node::Ledger::Repo.pending_transactions.values).size\n  if pending_transactions_count >= threshold\n    Node::Ledger.workflow_mine(pending_transactions)\n  end\nend\n"}},{"id":"start-class-method","html_id":"start-class-method","name":"start","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol.cr#L47","def":{"name":"start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"args = CLI::Argument.parse(ARGV)\ncocol = Cocol::App.new\nNode.settings.port = args.port.to_i32\nNode.settings.max_connections = args.max_connections.to_i32\nNode.settings.miner = args.miner?\nNode.settings.master = args.master?\nspawn(Node.start)\nif args.miner?\n  spawn(block_creation_loop)\nend\nif args.update?\n  spawn(Node::Ledger.update_ledger)\nend\ncocol.run_api(port: args.port.to_i32)\n"}}],"constructors":[],"instance_methods":[{"id":"run_api(port:Int32)-instance-method","html_id":"run_api(port:Int32)-instance-method","name":"run_api","doc":null,"summary":null,"abstract":false,"args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"}],"args_string":"(port : Int32)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol.cr#L19","def":{"name":"run_api","args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"before_all do |env|\n  env.response.content_type = \"application/json\"\n  env.response.headers[\"Allow\"] = \"HEAD,GET,PUT,POST,DELETE,OPTIONS\"\n  env.response.headers[\"Access-Control-Allow-Origin\"] = \"*\"\n  env.response.headers[\"Access-Control-Allow-Headers\"] = \"X-Requested-With, X-HTTP-Method-Override, Content-Type, Cache-Control, Accept\"\nend\nlogging(false)\nKemal.run(port: port, args: nil)\n"}}],"macros":[],"types":[]}]},{"html_id":"gitlab.com/cocol/cocol/Event","path":"Event.html","kind":"module","full_name":"Event","name":"Event","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/event/repo.cr","line_number":3,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/event/repo.cr"},{"filename":"cocol/node/event.cr","line_number":10,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/event.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"gitlab.com/cocol/cocol/Event","kind":"module","full_name":"Event","name":"Event"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"add_socket(socket:HTTP::WebSocket)-instance-method","html_id":"add_socket(socket:HTTP::WebSocket)-instance-method","name":"add_socket","doc":null,"summary":null,"abstract":false,"args":[{"name":"socket","doc":null,"default_value":"","external_name":"socket","restriction":"HTTP::WebSocket"}],"args_string":"(socket : HTTP::WebSocket)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/event.cr#L19","def":{"name":"add_socket","args":[{"name":"socket","doc":null,"default_value":"","external_name":"socket","restriction":"HTTP::WebSocket"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Event::Repo.websockets << socket"}},{"id":"block(block:Node::Ledger::Model::Block):NewBlockEvent-instance-method","html_id":"block(block:Node::Ledger::Model::Block):NewBlockEvent-instance-method","name":"block","doc":null,"summary":null,"abstract":false,"args":[{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Node::Ledger::Model::Block"}],"args_string":"(block : Node::Ledger::Model::Block) : NewBlockEvent","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/event.cr#L70","def":{"name":"block","args":[{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Node::Ledger::Model::Block"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NewBlockEvent","visibility":"Public","body":"{event: \"onNewBlock\", hash: block.hash, previous_hash: block.previous_hash, height: block.height}"}},{"id":"broadcast(payload:String)-instance-method","html_id":"broadcast(payload:String)-instance-method","name":"broadcast","doc":null,"summary":null,"abstract":false,"args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"String"}],"args_string":"(payload : String)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/event.cr#L27","def":{"name":"broadcast","args":[{"name":"payload","doc":null,"default_value":"","external_name":"payload","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Event::Repo.websockets.each do |socket|\n  socket.send(payload)\nend"}},{"id":"del_socket(socket:HTTP::WebSocket)-instance-method","html_id":"del_socket(socket:HTTP::WebSocket)-instance-method","name":"del_socket","doc":null,"summary":null,"abstract":false,"args":[{"name":"socket","doc":null,"default_value":"","external_name":"socket","restriction":"HTTP::WebSocket"}],"args_string":"(socket : HTTP::WebSocket)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/event.cr#L23","def":{"name":"del_socket","args":[{"name":"socket","doc":null,"default_value":"","external_name":"socket","restriction":"HTTP::WebSocket"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Event::Repo.websockets.delete(socket)"}},{"id":"peer(peer:Messenger::Struct::Peer):PeerConnectionEvent-instance-method","html_id":"peer(peer:Messenger::Struct::Peer):PeerConnectionEvent-instance-method","name":"peer","doc":null,"summary":null,"abstract":false,"args":[{"name":"peer","doc":null,"default_value":"","external_name":"peer","restriction":"Messenger::Struct::Peer"}],"args_string":"(peer : Messenger::Struct::Peer) : PeerConnectionEvent","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/event.cr#L62","def":{"name":"peer","args":[{"name":"peer","doc":null,"default_value":"","external_name":"peer","restriction":"Messenger::Struct::Peer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PeerConnectionEvent","visibility":"Public","body":"{event: \"onConnection\", node_port: Node.settings.port, peer_port: peer.handshake.port}"}},{"id":"transaction(event:EventType,transaction:Node::Ledger::Model::Transaction):TransactionEvent-instance-method","html_id":"transaction(event:EventType,transaction:Node::Ledger::Model::Transaction):TransactionEvent-instance-method","name":"transaction","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"EventType"},{"name":"transaction","doc":null,"default_value":"","external_name":"transaction","restriction":"Node::Ledger::Model::Transaction"}],"args_string":"(event : EventType, transaction : Node::Ledger::Model::Transaction) : TransactionEvent","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/event.cr#L53","def":{"name":"transaction","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"EventType"},{"name":"transaction","doc":null,"default_value":"","external_name":"transaction","restriction":"Node::Ledger::Model::Transaction"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"TransactionEvent","visibility":"Public","body":"{event: event, hash: transaction.hash, amount: transaction.amount}"}},{"id":"update(event:String):NamedTuple-instance-method","html_id":"update(event:String):NamedTuple-instance-method","name":"update","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"String"}],"args_string":"(event : String) : NamedTuple","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/event.cr#L33","def":{"name":"update","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple","visibility":"Public","body":"update = {event: event, peers: Messenger::Repo.peers.map do |peer|\n  peer.handshake.port\nend, port: Node.settings.port, miner: Node.settings.miner}\nif active_block = Node::Ledger::Repo.active_block\n  update = update.merge({height: active_block.height, hash: active_block.hash})\nelse\n  update = update.merge({height: 0, hash: \"-\"})\nend\nupdate\n"}}],"macros":[],"types":[{"html_id":"gitlab.com/cocol/cocol/Event/EventType","path":"Event/EventType.html","kind":"alias","full_name":"Event::EventType","name":"EventType","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/event.cr","line_number":14,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/event.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":true,"aliased":"String","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Event","kind":"module","full_name":"Event","name":"Event"},"doc":"should be Enum","summary":"<p>should be Enum</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"gitlab.com/cocol/cocol/Event/NewBlockEvent","path":"Event/NewBlockEvent.html","kind":"alias","full_name":"Event::NewBlockEvent","name":"NewBlockEvent","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/event.cr","line_number":17,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/event.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":true,"aliased":"NamedTuple(T)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Event","kind":"module","full_name":"Event","name":"Event"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"gitlab.com/cocol/cocol/Event/PeerConnectionEvent","path":"Event/PeerConnectionEvent.html","kind":"alias","full_name":"Event::PeerConnectionEvent","name":"PeerConnectionEvent","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/event.cr","line_number":16,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/event.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":true,"aliased":"NamedTuple(T)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Event","kind":"module","full_name":"Event","name":"Event"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"gitlab.com/cocol/cocol/Event/Repo","path":"Event/Repo.html","kind":"module","full_name":"Event::Repo","name":"Repo","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/event/repo.cr","line_number":4,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/event/repo.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"gitlab.com/cocol/cocol/Event/Repo","kind":"module","full_name":"Event::Repo","name":"Repo"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Event","kind":"module","full_name":"Event","name":"Event"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"websockets-instance-method","html_id":"websockets-instance-method","name":"websockets","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/event/repo.cr#L7","def":{"name":"websockets","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@websockets || (@@websockets = Array(HTTP::WebSocket).new)"}}],"macros":[],"types":[]},{"html_id":"gitlab.com/cocol/cocol/Event/TransactionEvent","path":"Event/TransactionEvent.html","kind":"alias","full_name":"Event::TransactionEvent","name":"TransactionEvent","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/event.cr","line_number":15,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/event.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":true,"aliased":"NamedTuple(T)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Event","kind":"module","full_name":"Event","name":"Event"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"gitlab.com/cocol/cocol/LedgerAbstract","path":"LedgerAbstract.html","kind":"class","full_name":"LedgerAbstract","name":"LedgerAbstract","abstract":true,"superclass":{"html_id":"gitlab.com/cocol/cocol/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"gitlab.com/cocol/cocol/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"gitlab.com/cocol/cocol/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cocol/node/abstract/ledger_abstract.cr","line_number":1,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/abstract/ledger_abstract.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"start-instance-method","html_id":"start-instance-method","name":"start","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/abstract/ledger_abstract.cr#L2","def":{"name":"start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"gitlab.com/cocol/cocol/LedgerRepoAbstract","path":"LedgerRepoAbstract.html","kind":"class","full_name":"LedgerRepoAbstract","name":"LedgerRepoAbstract","abstract":true,"superclass":{"html_id":"gitlab.com/cocol/cocol/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"gitlab.com/cocol/cocol/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"gitlab.com/cocol/cocol/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cocol/node/abstract/ledger_abstract.cr","line_number":5,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/abstract/ledger_abstract.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"pending_transactions-instance-method","html_id":"pending_transactions-instance-method","name":"pending_transactions","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/abstract/ledger_abstract.cr#L6","def":{"name":"pending_transactions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"gitlab.com/cocol/cocol/Messenger","path":"Messenger.html","kind":"module","full_name":"Messenger","name":"Messenger","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/messenger/struct/handshake.cr","line_number":5,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/struct/handshake.cr"},{"filename":"cocol/node/messenger/repo.cr","line_number":3,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/repo.cr"},{"filename":"cocol/node/messenger.cr","line_number":15,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"gitlab.com/cocol/cocol/Messenger","kind":"module","full_name":"Messenger","name":"Messenger"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"broadcast_transaction(transaction:Node::Ledger::Model::Transaction):Void-instance-method","html_id":"broadcast_transaction(transaction:Node::Ledger::Model::Transaction):Void-instance-method","name":"broadcast_transaction","doc":null,"summary":null,"abstract":false,"args":[{"name":"transaction","doc":null,"default_value":"","external_name":"transaction","restriction":"Node::Ledger::Model::Transaction"}],"args_string":"(transaction : Node::Ledger::Model::Transaction) : Void","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger.cr#L65","def":{"name":"broadcast_transaction","args":[{"name":"transaction","doc":null,"default_value":"","external_name":"transaction","restriction":"Node::Ledger::Model::Transaction"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Void","visibility":"Public","body":"Messenger::Repo.peers.each do |peer|\n  client = HTTP::Client.new(peer.ip_addr, peer.handshake.port)\n  begin\n    client.post(\"/transactions\", headers: HTTP::Headers {\"Content-Type\" => \"application/json\", \"X-Node-Id\" => Node.settings.port.to_s}, body: transaction.to_json)\n  rescue\n    pp(\"Peer #{peer.handshake.port} is not responding\")\n  end\n  client.close\nend"}},{"id":"connections_free:Int32-instance-method","html_id":"connections_free:Int32-instance-method","name":"connections_free","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger.cr#L85","def":{"name":"connections_free","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"free = Node.settings.max_connections - Messenger::Repo.peers.size\nif free < 0\n  return 0\nend\nfree\n"}},{"id":"establish_network_position-instance-method","html_id":"establish_network_position-instance-method","name":"establish_network_position","doc":"This is more of an e2e test","summary":"<p>This is more of an e2e test</p>","abstract":false,"args":[],"args_string":"","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger.cr#L30","def":{"name":"establish_network_position","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"config = Totem.from_file(\"/home/cris/Projects/crystal/cocol/config.yml\")\nmaster = (config.get(\"master\")).as_h\nmaster = HTTP::Client.new(master[\"host\"].as_s, master[\"port\"].as_i)\nMessenger.handshake(with: master)\nresponse = master.get(\"/peers\")\npeers = Array(Messenger::Struct::Peer).from_json(response.body)\npeers = peers.reject! do |p|\n  p.handshake.port == Node.settings.port\nend\nMessenger::Repo.known_peers.concat(peers)\n(peers.sample(Messenger.connections_free)).each do |peer|\n  sleep(2)\n  idents = Messenger::Repo.peers.map do |_peer|\n    _peer.handshake.ident\n  end\n  if (idents.includes?(peer.handshake.ident)) || (Node.settings.ident == peer.handshake.ident)\n  else\n    client = HTTP::Client.new(peer.ip_addr, peer.handshake.port)\n    response = Messenger.handshake(with: client)\n    case response.status_code\n    when 200\n      Messenger::Repo.peers << peer\n    end\n    client.close\n  end\nend\nmaster.close\n"}},{"id":"handshake(withclient:HTTP::Client):HTTP::Client::Response-instance-method","html_id":"handshake(withclient:HTTP::Client):HTTP::Client::Response-instance-method","name":"handshake","doc":null,"summary":null,"abstract":false,"args":[{"name":"client","doc":null,"default_value":"","external_name":"with","restriction":"HTTP::Client"}],"args_string":"(with client : HTTP::Client) : HTTP::Client::Response","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger.cr#L18","def":{"name":"handshake","args":[{"name":"client","doc":null,"default_value":"","external_name":"with","restriction":"HTTP::Client"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Client::Response","visibility":"Public","body":"client.post(\"/peers\", headers: HTTP::Headers {\"Content-Type\" => \"application/json\"}, body: Messenger::Struct::Handshake.new(ident: Node.settings.ident, port: Node.settings.port).to_json)"}}],"macros":[],"types":[{"html_id":"gitlab.com/cocol/cocol/Messenger/Repo","path":"Messenger/Repo.html","kind":"module","full_name":"Messenger::Repo","name":"Repo","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/messenger/repo.cr","line_number":4,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/repo.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"gitlab.com/cocol/cocol/Messenger/Repo","kind":"module","full_name":"Messenger::Repo","name":"Repo"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Messenger","kind":"module","full_name":"Messenger","name":"Messenger"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"known_peers-instance-method","html_id":"known_peers-instance-method","name":"known_peers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/repo.cr#L11","def":{"name":"known_peers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@known_peers || (@@known_peers = Set(Messenger::Struct::Peer).new)"}},{"id":"peers-instance-method","html_id":"peers-instance-method","name":"peers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/repo.cr#L7","def":{"name":"peers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@peers || (@@peers = Set(Messenger::Struct::Peer).new)"}}],"macros":[],"types":[]},{"html_id":"gitlab.com/cocol/cocol/Messenger/Struct","path":"Messenger/Struct.html","kind":"module","full_name":"Messenger::Struct","name":"Struct","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/messenger/struct/handshake.cr","line_number":5,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/struct/handshake.cr"},{"filename":"cocol/node/messenger/struct/peer.cr","line_number":8,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/struct/peer.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Messenger","kind":"module","full_name":"Messenger","name":"Messenger"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"gitlab.com/cocol/cocol/Messenger/Struct/Handshake","path":"Messenger/Struct/Handshake.html","kind":"struct","full_name":"Messenger::Struct::Handshake","name":"Handshake","abstract":false,"superclass":{"html_id":"gitlab.com/cocol/cocol/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"gitlab.com/cocol/cocol/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"gitlab.com/cocol/cocol/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"gitlab.com/cocol/cocol/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"gitlab.com/cocol/cocol/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cocol/node/messenger/struct/handshake.cr","line_number":6,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/struct/handshake.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"gitlab.com/cocol/cocol/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Messenger/Struct","kind":"module","full_name":"Messenger::Struct","name":"Struct"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(ident,port)-class-method","html_id":"new(ident,port)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ident","doc":null,"default_value":"","external_name":"ident","restriction":""},{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":""}],"args_string":"(ident, port)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/struct/handshake.cr#L12","def":{"name":"new","args":[{"name":"ident","doc":null,"default_value":"","external_name":"ident","restriction":""},{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ident, port)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/struct/handshake.cr#L7","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"instance = allocate\ninstance.initialize(__pull_for_json_serializable: pull)\nif instance.responds_to?(:finalize)\n  GC.add_finalizer(instance)\nend\ninstance\n"}}],"instance_methods":[{"id":"ident:UUID-instance-method","html_id":"ident:UUID-instance-method","name":"ident","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UUID","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/struct/handshake.cr#L11","def":{"name":"ident","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UUID","visibility":"Public","body":"@ident"}},{"id":"ident=(ident:UUID)-instance-method","html_id":"ident=(ident:UUID)-instance-method","name":"ident=","doc":null,"summary":null,"abstract":false,"args":[{"name":"ident","doc":null,"default_value":"","external_name":"ident","restriction":"UUID"}],"args_string":"(ident : UUID)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/struct/handshake.cr#L15","def":{"name":"ident=","args":[{"name":"ident","doc":null,"default_value":"","external_name":"ident","restriction":"UUID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ident = ident"}},{"id":"port:Int32-instance-method","html_id":"port:Int32-instance-method","name":"port","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/struct/handshake.cr#L12","def":{"name":"port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@port"}},{"id":"port=(port:Int32)-instance-method","html_id":"port=(port:Int32)-instance-method","name":"port=","doc":null,"summary":null,"abstract":false,"args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"}],"args_string":"(port : Int32)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/struct/handshake.cr#L16","def":{"name":"port=","args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@port = port"}}],"macros":[],"types":[]},{"html_id":"gitlab.com/cocol/cocol/Messenger/Struct/Peer","path":"Messenger/Struct/Peer.html","kind":"struct","full_name":"Messenger::Struct::Peer","name":"Peer","abstract":false,"superclass":{"html_id":"gitlab.com/cocol/cocol/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"gitlab.com/cocol/cocol/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"gitlab.com/cocol/cocol/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"gitlab.com/cocol/cocol/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"gitlab.com/cocol/cocol/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cocol/node/messenger/struct/peer.cr","line_number":9,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/struct/peer.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"gitlab.com/cocol/cocol/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Messenger/Struct","kind":"module","full_name":"Messenger::Struct","name":"Struct"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/struct/peer.cr#L10","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"instance = allocate\ninstance.initialize(__pull_for_json_serializable: pull)\nif instance.responds_to?(:finalize)\n  GC.add_finalizer(instance)\nend\ninstance\n"}},{"id":"new(handshake,ip_addr=&quot;localhost&quot;)-class-method","html_id":"new(handshake,ip_addr=&amp;quot;localhost&amp;quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"handshake","doc":null,"default_value":"","external_name":"handshake","restriction":""},{"name":"ip_addr","doc":null,"default_value":"\"localhost\"","external_name":"ip_addr","restriction":""}],"args_string":"(handshake, ip_addr = <span class=\"s\">&quot;localhost&quot;</span>)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/struct/peer.cr#L17","def":{"name":"new","args":[{"name":"handshake","doc":null,"default_value":"","external_name":"handshake","restriction":""},{"name":"ip_addr","doc":null,"default_value":"\"localhost\"","external_name":"ip_addr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(handshake, ip_addr)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"handshake:Messenger::Struct::Handshake-instance-method","html_id":"handshake:Messenger::Struct::Handshake-instance-method","name":"handshake","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Messenger::Struct::Handshake","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/struct/peer.cr#L17","def":{"name":"handshake","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Messenger::Struct::Handshake","visibility":"Public","body":"@handshake"}},{"id":"handshake=(handshake:Messenger::Struct::Handshake)-instance-method","html_id":"handshake=(handshake:Messenger::Struct::Handshake)-instance-method","name":"handshake=","doc":null,"summary":null,"abstract":false,"args":[{"name":"handshake","doc":null,"default_value":"","external_name":"handshake","restriction":"Messenger::Struct::Handshake"}],"args_string":"(handshake : Messenger::Struct::Handshake)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/struct/peer.cr#L21","def":{"name":"handshake=","args":[{"name":"handshake","doc":null,"default_value":"","external_name":"handshake","restriction":"Messenger::Struct::Handshake"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@handshake = handshake"}},{"id":"ip_addr:String-instance-method","html_id":"ip_addr:String-instance-method","name":"ip_addr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/struct/peer.cr#L15","def":{"name":"ip_addr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@ip_addr"}},{"id":"ip_addr=(ip_addr:String)-instance-method","html_id":"ip_addr=(ip_addr:String)-instance-method","name":"ip_addr=","doc":null,"summary":null,"abstract":false,"args":[{"name":"ip_addr","doc":null,"default_value":"","external_name":"ip_addr","restriction":"String"}],"args_string":"(ip_addr : String)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/messenger/struct/peer.cr#L19","def":{"name":"ip_addr=","args":[{"name":"ip_addr","doc":null,"default_value":"","external_name":"ip_addr","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ip_addr = ip_addr"}}],"macros":[],"types":[]}]}]},{"html_id":"gitlab.com/cocol/cocol/Node","path":"Node.html","kind":"module","full_name":"Node","name":"Node","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/settings.cr","line_number":3,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/settings.cr"},{"filename":"cocol/node.cr","line_number":1,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node.cr"},{"filename":"cocol/node/ledger.cr","line_number":13,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"gitlab.com/cocol/cocol/Node","kind":"module","full_name":"Node","name":"Node"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"settings-class-method","html_id":"settings-class-method","name":"settings","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/settings.cr#L13","def":{"name":"settings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@settings || (@@settings = Settings.new)"}}],"constructors":[],"instance_methods":[{"id":"start-instance-method","html_id":"start-instance-method","name":"start","doc":"should be e2e tested","summary":"<p>should be e2e tested</p>","abstract":false,"args":[],"args_string":"","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node.cr#L5","def":{"name":"start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Node::Ledger.workflow_genesis_block\nif !Node.settings.master\n  Messenger.establish_network_position\nend\n"}}],"macros":[],"types":[{"html_id":"gitlab.com/cocol/cocol/Node/Ledger","path":"Node/Ledger.html","kind":"module","full_name":"Node::Ledger","name":"Ledger","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/ledger/model/transaction.cr","line_number":4,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/transaction.cr"},{"filename":"cocol/node/ledger/repo.cr","line_number":3,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr"},{"filename":"cocol/node/ledger.cr","line_number":14,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"gitlab.com/cocol/cocol/Node/Ledger","kind":"module","full_name":"Node::Ledger","name":"Ledger"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Node","kind":"module","full_name":"Node","name":"Node"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"first_candidate:String-instance-method","html_id":"first_candidate:String-instance-method","name":"first_candidate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger.cr#L92","def":{"name":"first_candidate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"tc = Node::Ledger::Repo.candidates.map do |c|\n  [c, Node::Ledger::Repo.blocks[c].timestamp]\nend\ntcs = tc.sort do |a, b|\n  (a[1].as(Int64)) <=> (b[1].as(Int64))\nend\nreturn tcs.last[0].as(String)\n"}},{"id":"update_ledger:Void-instance-method","html_id":"update_ledger:Void-instance-method","name":"update_ledger","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Void","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger.cr#L128","def":{"name":"update_ledger","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Void","visibility":"Public","body":"if peer = Messenger::Repo.peers.first?\n  client = HTTP::Client.new(peer.ip_addr, peer.handshake.port)\n  response = client.get(\"/blocks\")\n  json_ledger = JSON.parse(response.body)\n  json_ledger.as_a.each do |json_block|\n    block = Node::Ledger::Model::Block.from_json(json_block.to_json)\n    Node::Ledger::Repo.blocks[block.hash] = block\n    Node::Ledger::Repo.establish(block.hash, block.height)\n  end\n  Event.broadcast((Event.update(\"onInitialUpdate\")).to_json)\nelse\n  sleep(1)\n  update_ledger\nend"}},{"id":"workflow_assign_block(block:Node::Ledger::Model::Block):Void-instance-method","html_id":"workflow_assign_block(block:Node::Ledger::Model::Block):Void-instance-method","name":"workflow_assign_block","doc":null,"summary":null,"abstract":false,"args":[{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Node::Ledger::Model::Block"}],"args_string":"(block : Node::Ledger::Model::Block) : Void","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger.cr#L99","def":{"name":"workflow_assign_block","args":[{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Node::Ledger::Model::Block"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Void","visibility":"Public","body":"if Node::Ledger::Repo.ledger.last == block.previous_hash\n  Node::Ledger::Repo.candidates << block.hash\nelse\n  if block.previous_hash == first_candidate()\n    Node::Ledger::Repo.establish(block.previous_hash, Node::Ledger::Repo.blocks[block.previous_hash].height)\n    Node::Ledger::Repo.candidates.clear\n    if orphan = Node::Ledger::Repo.orphans[block.hash]?\n      Node::Ledger::Repo.establish(block.hash, block.height)\n      Node::Ledger::Repo.candidates << orphan\n      Node::Ledger::Repo.orphans.delete(block.hash)\n    else\n      Node::Ledger::Repo.candidates << block.hash\n    end\n  else\n    if !(Node::Ledger::Repo.ledger.includes?(block.previous_hash))\n      if !Node::Ledger::Repo.blocks[block.previous_hash]?\n        Node::Ledger::Repo.orphans[block.previous_hash] = block.hash\n      end\n    end\n  end\nend"}},{"id":"workflow_broadcast_block(block:Node::Ledger::Model::Block):Void-instance-method","html_id":"workflow_broadcast_block(block:Node::Ledger::Model::Block):Void-instance-method","name":"workflow_broadcast_block","doc":null,"summary":null,"abstract":false,"args":[{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Node::Ledger::Model::Block"}],"args_string":"(block : Node::Ledger::Model::Block) : Void","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger.cr#L72","def":{"name":"workflow_broadcast_block","args":[{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Node::Ledger::Model::Block"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Void","visibility":"Public","body":"Messenger::Repo.peers.each do |peer|\n  client = HTTP::Client.new(peer.ip_addr, peer.handshake.port)\n  begin\n    client.post(\"/blocks\", headers: HTTP::Headers {\"Content-Type\" => \"application/json\", \"X-Node-Id\" => Node.settings.port.to_s}, body: block.to_json)\n  rescue\n    pp(\"Peer #{peer.handshake.port} is not responding\")\n  end\n  client.close\nend"}},{"id":"workflow_fetch_ledger(client:HTTP::Client):Void-instance-method","html_id":"workflow_fetch_ledger(client:HTTP::Client):Void-instance-method","name":"workflow_fetch_ledger","doc":null,"summary":null,"abstract":false,"args":[{"name":"client","doc":null,"default_value":"","external_name":"client","restriction":"HTTP::Client"}],"args_string":"(client : HTTP::Client) : Void","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger.cr#L62","def":{"name":"workflow_fetch_ledger","args":[{"name":"client","doc":null,"default_value":"","external_name":"client","restriction":"HTTP::Client"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Void","visibility":"Public","body":"response = client.get(\"/ledger\")\nledger = Array(String).from_json(response.body)\nNode::Ledger::Repo.ledger.concat(ledger)\n"}},{"id":"workflow_genesis_block:Void-instance-method","html_id":"workflow_genesis_block:Void-instance-method","name":"workflow_genesis_block","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Void","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger.cr#L19","def":{"name":"workflow_genesis_block","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Void","visibility":"Public","body":"Node::Ledger::Repo.ledger.clear\nNode::Ledger::Repo.orphans.clear\nNode::Ledger::Repo.candidates.clear\nNode::Ledger::Repo.blocks.clear\nNode::Ledger::Repo.established_height = 0\ngenesis = Node::Ledger::Model::Block.genesis\nNode::Ledger::Repo.blocks[genesis.hash] = genesis\nNode::Ledger::Repo.ledger << genesis.hash\n"}},{"id":"workflow_mine(transactions:Array(Node::Ledger::Model::Transaction),difficulty_bits:Int32=1):Void-instance-method","html_id":"workflow_mine(transactions:Array(Node::Ledger::Model::Transaction),difficulty_bits:Int32=1):Void-instance-method","name":"workflow_mine","doc":null,"summary":null,"abstract":false,"args":[{"name":"transactions","doc":null,"default_value":"","external_name":"transactions","restriction":"Array(Node::Ledger::Model::Transaction)"},{"name":"difficulty_bits","doc":null,"default_value":"1","external_name":"difficulty_bits","restriction":"Int32"}],"args_string":"(transactions : Array(Node::Ledger::Model::Transaction), difficulty_bits : Int32 = <span class=\"n\">1</span>) : Void","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger.cr#L32","def":{"name":"workflow_mine","args":[{"name":"transactions","doc":null,"default_value":"","external_name":"transactions","restriction":"Array(Node::Ledger::Model::Transaction)"},{"name":"difficulty_bits","doc":null,"default_value":"1","external_name":"difficulty_bits","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Void","visibility":"Public","body":"active_block = Node::Ledger::Repo.active_block\nif active_block\nelse\n  raise(\"No active block\")\nend\nif Node::Ledger::Repo.candidates.size > 0\n  previous_hash = first_candidate()\n  height = Node::Ledger::Repo.blocks[previous_hash].height + 1\nelse\n  previous_hash = active_block.hash\n  height = active_block.height + 1\nend\nnew_block = Node::Ledger::Model::Block.new(height: height, transactions: transactions, previous_hash: previous_hash, difficulty_bits: difficulty_bits)\nif Node::Ledger::Repo.save_block(new_block)\n  pp(\"[#{Time.now}] [Node: #{Node.settings.port}] Mined: #{new_block.hash}\")\n  Node::Ledger::Repo.delete_transactions(transactions)\n  workflow_assign_block(new_block)\n  spawn(Node::Ledger.workflow_broadcast_block(new_block))\n  spawn(Event.broadcast((Event.update(\"onInitialUpdate\")).to_json))\n  spawn(Event.broadcast((Event.block(new_block)).to_json))\nend\n"}}],"macros":[],"types":[{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model","path":"Node/Ledger/Model.html","kind":"module","full_name":"Node::Ledger::Model","name":"Model","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/ledger/model/transaction.cr","line_number":4,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/transaction.cr"},{"filename":"cocol/node/ledger/model/block.cr","line_number":7,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model/Block","kind":"class","full_name":"Node::Ledger::Model::Block","name":"Block"},{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Repo","kind":"module","full_name":"Node::Ledger::Repo","name":"Repo"}],"namespace":{"html_id":"gitlab.com/cocol/cocol/Node/Ledger","kind":"module","full_name":"Node::Ledger","name":"Ledger"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model/Block","path":"Node/Ledger/Model/Block.html","kind":"class","full_name":"Node::Ledger::Model::Block","name":"Block","abstract":false,"superclass":{"html_id":"gitlab.com/cocol/cocol/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model/PoW","kind":"module","full_name":"Node::Ledger::Model::PoW","name":"PoW"},{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model","kind":"module","full_name":"Node::Ledger::Model","name":"Model"},{"html_id":"gitlab.com/cocol/cocol/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"gitlab.com/cocol/cocol/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"gitlab.com/cocol/cocol/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cocol/node/ledger/model/block.cr","line_number":51,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"gitlab.com/cocol/cocol/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model","kind":"module","full_name":"Node::Ledger::Model","name":"Model"},{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model/PoW","kind":"module","full_name":"Node::Ledger::Model::PoW","name":"PoW"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model","kind":"module","full_name":"Node::Ledger::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[{"id":"genesis-class-method","html_id":"genesis-class-method","name":"genesis","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L96","def":{"name":"genesis","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Block.new(hash: \"00f82f15d9fee292860b2a37183d769efd3b617451c04017f700238fd472e8bb\", timestamp: 1449970561_i64, height: 0_u64, nonce: 144_u64, previous_hash: \"Olivia\", transactions: Array(Transaction).new)"}}],"constructors":[{"id":"new(hash,timestamp,height,nonce,previous_hash,transactions)-class-method","html_id":"new(hash,timestamp,height,nonce,previous_hash,transactions)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""},{"name":"timestamp","doc":null,"default_value":"","external_name":"timestamp","restriction":""},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"previous_hash","doc":null,"default_value":"","external_name":"previous_hash","restriction":""},{"name":"transactions","doc":null,"default_value":"","external_name":"transactions","restriction":""}],"args_string":"(hash, timestamp, height, nonce, previous_hash, transactions)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L63","def":{"name":"new","args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""},{"name":"timestamp","doc":null,"default_value":"","external_name":"timestamp","restriction":""},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""},{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":""},{"name":"previous_hash","doc":null,"default_value":"","external_name":"previous_hash","restriction":""},{"name":"transactions","doc":null,"default_value":"","external_name":"transactions","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(hash, timestamp, height, nonce, previous_hash, transactions)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(height:UInt64,transactions:Array(Transaction),previous_hash:String,difficulty_bits:Int32=20)-class-method","html_id":"new(height:UInt64,transactions:Array(Transaction),previous_hash:String,difficulty_bits:Int32=20)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt64"},{"name":"transactions","doc":null,"default_value":"","external_name":"transactions","restriction":"Array(Transaction)"},{"name":"previous_hash","doc":null,"default_value":"","external_name":"previous_hash","restriction":"String"},{"name":"difficulty_bits","doc":null,"default_value":"20","external_name":"difficulty_bits","restriction":"Int32"}],"args_string":"(height : UInt64, transactions : Array(Transaction), previous_hash : String, difficulty_bits : Int32 = <span class=\"n\">20</span>)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L71","def":{"name":"new","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt64"},{"name":"transactions","doc":null,"default_value":"","external_name":"transactions","restriction":"Array(Transaction)"},{"name":"previous_hash","doc":null,"default_value":"","external_name":"previous_hash","restriction":"String"},{"name":"difficulty_bits","doc":null,"default_value":"20","external_name":"difficulty_bits","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sleep(Random.rand(5.0..6.1))\nblock_data = BlockData.new(timestamp: Time.utc_now.to_unix, height: height, previous_hash: previous_hash, transactions: transactions.map do |txn|\n  txn.hash\nend)\nwork = PoW.mine(difficulty_bits: difficulty_bits, block_data: block_data)\nBlock.new(hash: work.hash, timestamp: block_data.timestamp, height: height, nonce: work.nonce, previous_hash: previous_hash, transactions: transactions)\n"}},{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L52","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"instance = allocate\ninstance.initialize(__pull_for_json_serializable: pull)\nif instance.responds_to?(:finalize)\n  GC.add_finalizer(instance)\nend\ninstance\n"}}],"instance_methods":[{"id":"hash:String-instance-method","html_id":"hash:String-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L58","def":{"name":"hash","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@hash"}},{"id":"height:UInt64-instance-method","html_id":"height:UInt64-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L60","def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@height"}},{"id":"nonce:UInt64-instance-method","html_id":"nonce:UInt64-instance-method","name":"nonce","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L61","def":{"name":"nonce","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@nonce"}},{"id":"previous_hash:String-instance-method","html_id":"previous_hash:String-instance-method","name":"previous_hash","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L62","def":{"name":"previous_hash","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@previous_hash"}},{"id":"timestamp:Int64-instance-method","html_id":"timestamp:Int64-instance-method","name":"timestamp","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L59","def":{"name":"timestamp","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@timestamp"}},{"id":"transactions:Array(Transaction)-instance-method","html_id":"transactions:Array(Transaction)-instance-method","name":"transactions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Transaction)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L63","def":{"name":"transactions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Transaction)","visibility":"Public","body":"@transactions"}},{"id":"transactions=(transactions:Array(Transaction))-instance-method","html_id":"transactions=(transactions:Array(Transaction))-instance-method","name":"transactions=","doc":null,"summary":null,"abstract":false,"args":[{"name":"transactions","doc":null,"default_value":"","external_name":"transactions","restriction":"Array(Transaction)"}],"args_string":"(transactions : Array(Transaction))","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L67","def":{"name":"transactions=","args":[{"name":"transactions","doc":null,"default_value":"","external_name":"transactions","restriction":"Array(Transaction)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@transactions = transactions"}}],"macros":[],"types":[]},{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model/PoW","path":"Node/Ledger/Model/PoW.html","kind":"module","full_name":"Node::Ledger::Model::PoW","name":"PoW","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/ledger/model/block.cr","line_number":10,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model/PoW","kind":"module","full_name":"Node::Ledger::Model::PoW","name":"PoW"}],"subclasses":[],"including_types":[{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model/Block","kind":"class","full_name":"Node::Ledger::Model::Block","name":"Block"}],"namespace":{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model","kind":"module","full_name":"Node::Ledger::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[{"id":"calculate_hash(nonce:Int64,data:String):BlockHash-class-method","html_id":"calculate_hash(nonce:Int64,data:String):BlockHash-class-method","name":"calculate_hash","doc":null,"summary":null,"abstract":false,"args":[{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Int64"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"args_string":"(nonce : Int64, data : String) : BlockHash","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L44","def":{"name":"calculate_hash","args":[{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"Int64"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BlockHash","visibility":"Public","body":"sha = OpenSSL::Digest.new(\"SHA256\")\nsha.update(\"#{nonce}#{data}\")\nsha.hexdigest\n"}},{"id":"mine(difficulty_bits:Int32,block_data:BlockData):Work-class-method","html_id":"mine(difficulty_bits:Int32,block_data:BlockData):Work-class-method","name":"mine","doc":null,"summary":null,"abstract":false,"args":[{"name":"difficulty_bits","doc":null,"default_value":"","external_name":"difficulty_bits","restriction":"Int32"},{"name":"block_data","doc":null,"default_value":"","external_name":"block_data","restriction":"BlockData"}],"args_string":"(difficulty_bits : Int32, block_data : BlockData) : Work","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L29","def":{"name":"mine","args":[{"name":"difficulty_bits","doc":null,"default_value":"","external_name":"difficulty_bits","restriction":"Int32"},{"name":"block_data","doc":null,"default_value":"","external_name":"block_data","restriction":"BlockData"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Work","visibility":"Public","body":"max_nonce = (BigInt.new(2)) ** (BigInt.new(32))\ntarget = (BigInt.new(2)) ** (BigInt.new(256 - difficulty_bits))\ndata = block_data.to_hash_input\n(0..max_nonce).each do |i|\n  hash = calculate_hash(i.to_i64, data)\n  if (BigInt.new(hash, 16)) < target\n    return Work.new(nonce: i.to_u64, hash: hash)\n  end\nend\nraise(\"max_nonce reached\")\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model/PoW/BlockData","path":"Node/Ledger/Model/PoW/BlockData.html","kind":"struct","full_name":"Node::Ledger::Model::PoW::BlockData","name":"BlockData","abstract":false,"superclass":{"html_id":"gitlab.com/cocol/cocol/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"gitlab.com/cocol/cocol/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"gitlab.com/cocol/cocol/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"gitlab.com/cocol/cocol/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cocol/node/ledger/model/block.cr","line_number":18,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model/PoW","kind":"module","full_name":"Node::Ledger::Model::PoW","name":"PoW"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(height:UInt64,timestamp:Int64,transactions:Array(String),previous_hash:BlockHash)-class-method","html_id":"new(height:UInt64,timestamp:Int64,transactions:Array(String),previous_hash:BlockHash)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt64"},{"name":"timestamp","doc":null,"default_value":"","external_name":"timestamp","restriction":"Int64"},{"name":"transactions","doc":null,"default_value":"","external_name":"transactions","restriction":"Array(String)"},{"name":"previous_hash","doc":null,"default_value":"","external_name":"previous_hash","restriction":"BlockHash"}],"args_string":"(height : UInt64, timestamp : Int64, transactions : Array(String), previous_hash : BlockHash)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L18","def":{"name":"new","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt64"},{"name":"timestamp","doc":null,"default_value":"","external_name":"timestamp","restriction":"Int64"},{"name":"transactions","doc":null,"default_value":"","external_name":"transactions","restriction":"Array(String)"},{"name":"previous_hash","doc":null,"default_value":"","external_name":"previous_hash","restriction":"BlockHash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(height, timestamp, transactions, previous_hash)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L18","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"BlockData.new(@height.clone, @timestamp.clone, @transactions.clone, @previous_hash.clone)"}},{"id":"copy_with(height_height=@height,timestamp_timestamp=@timestamp,transactions_transactions=@transactions,previous_hash_previous_hash=@previous_hash)-instance-method","html_id":"copy_with(height_height=@height,timestamp_timestamp=@timestamp,transactions_transactions=@transactions,previous_hash_previous_hash=@previous_hash)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_height","doc":null,"default_value":"@height","external_name":"height","restriction":""},{"name":"_timestamp","doc":null,"default_value":"@timestamp","external_name":"timestamp","restriction":""},{"name":"_transactions","doc":null,"default_value":"@transactions","external_name":"transactions","restriction":""},{"name":"_previous_hash","doc":null,"default_value":"@previous_hash","external_name":"previous_hash","restriction":""}],"args_string":"(height _height = @height, timestamp _timestamp = @timestamp, transactions _transactions = @transactions, previous_hash _previous_hash = @previous_hash)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L18","def":{"name":"copy_with","args":[{"name":"_height","doc":null,"default_value":"@height","external_name":"height","restriction":""},{"name":"_timestamp","doc":null,"default_value":"@timestamp","external_name":"timestamp","restriction":""},{"name":"_transactions","doc":null,"default_value":"@transactions","external_name":"transactions","restriction":""},{"name":"_previous_hash","doc":null,"default_value":"@previous_hash","external_name":"previous_hash","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"BlockData.new(_height, _timestamp, _transactions, _previous_hash)"}},{"id":"height:UInt64-instance-method","html_id":"height:UInt64-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@height"}},{"id":"previous_hash:BlockHash-instance-method","html_id":"previous_hash:BlockHash-instance-method","name":"previous_hash","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : BlockHash","source_link":null,"def":{"name":"previous_hash","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BlockHash","visibility":"Public","body":"@previous_hash"}},{"id":"timestamp:Int64-instance-method","html_id":"timestamp:Int64-instance-method","name":"timestamp","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":null,"def":{"name":"timestamp","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@timestamp"}},{"id":"to_hash_input:String-instance-method","html_id":"to_hash_input:String-instance-method","name":"to_hash_input","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L24","def":{"name":"to_hash_input","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"#{height}#{timestamp}#{transactions}#{previous_hash}\""}},{"id":"transactions:Array(String)-instance-method","html_id":"transactions:Array(String)-instance-method","name":"transactions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"def":{"name":"transactions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@transactions"}}],"macros":[],"types":[]},{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model/PoW/BlockHash","path":"Node/Ledger/Model/PoW/BlockHash.html","kind":"alias","full_name":"Node::Ledger::Model::PoW::BlockHash","name":"BlockHash","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/ledger/model/block.cr","line_number":13,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":true,"aliased":"String","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model/PoW","kind":"module","full_name":"Node::Ledger::Model::PoW","name":"PoW"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model/PoW/Work","path":"Node/Ledger/Model/PoW/Work.html","kind":"struct","full_name":"Node::Ledger::Model::PoW::Work","name":"Work","abstract":false,"superclass":{"html_id":"gitlab.com/cocol/cocol/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"gitlab.com/cocol/cocol/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"gitlab.com/cocol/cocol/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"gitlab.com/cocol/cocol/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cocol/node/ledger/model/block.cr","line_number":15,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model/PoW","kind":"module","full_name":"Node::Ledger::Model::PoW","name":"PoW"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(nonce:UInt64,hash:BlockHash)-class-method","html_id":"new(nonce:UInt64,hash:BlockHash)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"UInt64"},{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":"BlockHash"}],"args_string":"(nonce : UInt64, hash : BlockHash)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L15","def":{"name":"new","args":[{"name":"nonce","doc":null,"default_value":"","external_name":"nonce","restriction":"UInt64"},{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":"BlockHash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(nonce, hash)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L15","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Work.new(@nonce.clone, @hash.clone)"}},{"id":"copy_with(nonce_nonce=@nonce,hash_hash=@hash)-instance-method","html_id":"copy_with(nonce_nonce=@nonce,hash_hash=@hash)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_nonce","doc":null,"default_value":"@nonce","external_name":"nonce","restriction":""},{"name":"_hash","doc":null,"default_value":"@hash","external_name":"hash","restriction":""}],"args_string":"(nonce _nonce = @nonce, hash _hash = @hash)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/block.cr#L15","def":{"name":"copy_with","args":[{"name":"_nonce","doc":null,"default_value":"@nonce","external_name":"nonce","restriction":""},{"name":"_hash","doc":null,"default_value":"@hash","external_name":"hash","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Work.new(_nonce, _hash)"}},{"id":"hash:BlockHash-instance-method","html_id":"hash:BlockHash-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : BlockHash","source_link":null,"def":{"name":"hash","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BlockHash","visibility":"Public","body":"@hash"}},{"id":"nonce:UInt64-instance-method","html_id":"nonce:UInt64-instance-method","name":"nonce","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":null,"def":{"name":"nonce","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@nonce"}}],"macros":[],"types":[]}]},{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model/Transaction","path":"Node/Ledger/Model/Transaction.html","kind":"class","full_name":"Node::Ledger::Model::Transaction","name":"Transaction","abstract":false,"superclass":{"html_id":"gitlab.com/cocol/cocol/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"gitlab.com/cocol/cocol/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"gitlab.com/cocol/cocol/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"gitlab.com/cocol/cocol/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cocol/node/ledger/model/transaction.cr","line_number":5,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/transaction.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"gitlab.com/cocol/cocol/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model","kind":"module","full_name":"Node::Ledger::Model","name":"Model"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(from,to,amount)-class-method","html_id":"new(from,to,amount)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":""}],"args_string":"(from, to, amount)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/transaction.cr#L14","def":{"name":"new","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(from, to, amount)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/transaction.cr#L6","def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"::JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"instance = allocate\ninstance.initialize(__pull_for_json_serializable: pull)\nif instance.responds_to?(:finalize)\n  GC.add_finalizer(instance)\nend\ninstance\n"}}],"instance_methods":[{"id":"amount:Float32-instance-method","html_id":"amount:Float32-instance-method","name":"amount","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float32","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/transaction.cr#L12","def":{"name":"amount","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"@amount"}},{"id":"amount=(amount:Float32)-instance-method","html_id":"amount=(amount:Float32)-instance-method","name":"amount=","doc":null,"summary":null,"abstract":false,"args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":"Float32"}],"args_string":"(amount : Float32)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/transaction.cr#L16","def":{"name":"amount=","args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@amount = amount"}},{"id":"from:String-instance-method","html_id":"from:String-instance-method","name":"from","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/transaction.cr#L10","def":{"name":"from","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@from"}},{"id":"from=(from:String)-instance-method","html_id":"from=(from:String)-instance-method","name":"from=","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"String"}],"args_string":"(from : String)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/transaction.cr#L14","def":{"name":"from=","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@from = from"}},{"id":"hash:String-instance-method","html_id":"hash:String-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/transaction.cr#L13","def":{"name":"hash","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@hash"}},{"id":"timestamp:Int64-instance-method","html_id":"timestamp:Int64-instance-method","name":"timestamp","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/transaction.cr#L14","def":{"name":"timestamp","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@timestamp"}},{"id":"to:String-instance-method","html_id":"to:String-instance-method","name":"to","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/transaction.cr#L11","def":{"name":"to","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@to"}},{"id":"to=(to:String)-instance-method","html_id":"to=(to:String)-instance-method","name":"to=","doc":null,"summary":null,"abstract":false,"args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"String"}],"args_string":"(to : String)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/model/transaction.cr#L15","def":{"name":"to=","args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@to = to"}}],"macros":[],"types":[]}]},{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Repo","path":"Node/Ledger/Repo.html","kind":"module","full_name":"Node::Ledger::Repo","name":"Repo","abstract":false,"superclass":null,"ancestors":[{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model","kind":"module","full_name":"Node::Ledger::Model","name":"Model"}],"locations":[{"filename":"cocol/node/ledger/repo.cr","line_number":4,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Model","kind":"module","full_name":"Node::Ledger::Model","name":"Model"}],"extended_modules":[{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Repo","kind":"module","full_name":"Node::Ledger::Repo","name":"Repo"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Node/Ledger","kind":"module","full_name":"Node::Ledger","name":"Ledger"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"active_block:Model::Block?-instance-method","html_id":"active_block:Model::Block?-instance-method","name":"active_block","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Model::Block?","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr#L44","def":{"name":"active_block","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil | Model::Block","visibility":"Public","body":"if ledger.size > 0\n  blocks[ledger.last]\nelse\n  nil\nend"}},{"id":"blocks:Hash(BlockHash,Model::Block)-instance-method","html_id":"blocks:Hash(BlockHash,Model::Block)-instance-method","name":"blocks","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(BlockHash, Model::Block)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr#L14","def":{"name":"blocks","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(BlockHash, Model::Block)","visibility":"Public","body":"@@blocks || (@@blocks = Hash(BlockHash, Model::Block).new)"}},{"id":"candidates:Array(BlockHash)-instance-method","html_id":"candidates:Array(BlockHash)-instance-method","name":"candidates","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(BlockHash)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr#L26","def":{"name":"candidates","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(BlockHash)","visibility":"Public","body":"@@candidates || (@@candidates = Array(BlockHash).new)"}},{"id":"delete_transactions(mined_transactions:Array(Node::Ledger::Model::Transaction)):Void-instance-method","html_id":"delete_transactions(mined_transactions:Array(Node::Ledger::Model::Transaction)):Void-instance-method","name":"delete_transactions","doc":null,"summary":null,"abstract":false,"args":[{"name":"mined_transactions","doc":null,"default_value":"","external_name":"mined_transactions","restriction":"Array(Node::Ledger::Model::Transaction)"}],"args_string":"(mined_transactions : Array(Node::Ledger::Model::Transaction)) : Void","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr#L90","def":{"name":"delete_transactions","args":[{"name":"mined_transactions","doc":null,"default_value":"","external_name":"mined_transactions","restriction":"Array(Node::Ledger::Model::Transaction)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Void","visibility":"Public","body":"mined_transactions.each do |txn|\n  pending_transactions.delete(txn.hash)\nend"}},{"id":"establish(block_hash:BlockHash,height:Height):Void-instance-method","html_id":"establish(block_hash:BlockHash,height:Height):Void-instance-method","name":"establish","doc":null,"summary":null,"abstract":false,"args":[{"name":"block_hash","doc":null,"default_value":"","external_name":"block_hash","restriction":"BlockHash"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Height"}],"args_string":"(block_hash : BlockHash, height : Height) : Void","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr#L76","def":{"name":"establish","args":[{"name":"block_hash","doc":null,"default_value":"","external_name":"block_hash","restriction":"BlockHash"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Height"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Void","visibility":"Public","body":"self.ledger << block_hash\nself.established_height(plus: 1_u64)\nself.height[height] = block_hash\n"}},{"id":"established_height(plus:UInt64):UInt64-instance-method","html_id":"established_height(plus:UInt64):UInt64-instance-method","name":"established_height","doc":null,"summary":null,"abstract":false,"args":[{"name":"plus","doc":null,"default_value":"","external_name":"plus","restriction":"UInt64"}],"args_string":"(plus : UInt64) : UInt64","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr#L56","def":{"name":"established_height","args":[{"name":"plus","doc":null,"default_value":"","external_name":"plus","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@@established_height = self.established_height + plus"}},{"id":"established_height:UInt64-instance-method","html_id":"established_height:UInt64-instance-method","name":"established_height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr#L52","def":{"name":"established_height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@@established_height || (@@established_height = 0_u64)"}},{"id":"established_height=(height:UInt64):UInt64-instance-method","html_id":"established_height=(height:UInt64):UInt64-instance-method","name":"established_height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt64"}],"args_string":"(height : UInt64) : UInt64","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr#L60","def":{"name":"established_height=","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@@established_height = height"}},{"id":"height:Hash(Height,BlockHash)-instance-method","html_id":"height:Hash(Height,BlockHash)-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(Height, BlockHash)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr#L22","def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(Height, BlockHash)","visibility":"Public","body":"@@height || (@@height = Hash(Height, BlockHash).new)"}},{"id":"ledger:Array(BlockHash)-instance-method","html_id":"ledger:Array(BlockHash)-instance-method","name":"ledger","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(BlockHash)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr#L18","def":{"name":"ledger","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(BlockHash)","visibility":"Public","body":"@@ledger || (@@ledger = Array(BlockHash).new)"}},{"id":"orphans:Hash(ParentHash,BlockHash)-instance-method","html_id":"orphans:Hash(ParentHash,BlockHash)-instance-method","name":"orphans","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(ParentHash, BlockHash)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr#L30","def":{"name":"orphans","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(ParentHash, BlockHash)","visibility":"Public","body":"@@orphans || (@@orphans = Hash(ParentHash, BlockHash).new)"}},{"id":"pending_transactions:Hash(TxnHash,Model::Transaction)-instance-method","html_id":"pending_transactions:Hash(TxnHash,Model::Transaction)-instance-method","name":"pending_transactions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(TxnHash, Model::Transaction)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr#L34","def":{"name":"pending_transactions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(TxnHash, Model::Transaction)","visibility":"Public","body":"@@pending_transactions || (@@pending_transactions = Hash(TxnHash, Model::Transaction).new)"}},{"id":"save_block(block:Model::Block):Bool-instance-method","html_id":"save_block(block:Model::Block):Bool-instance-method","name":"save_block","doc":null,"summary":null,"abstract":false,"args":[{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Model::Block"}],"args_string":"(block : Model::Block) : Bool","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr#L64","def":{"name":"save_block","args":[{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Model::Block"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if self.blocks[block.hash]?\n  return false\nend\nif self.height[block.height]?\n  return false\nend\nif self.candidates.any? do |c|\n  self.blocks[c].height == block.height\nend\n  return false\nend\nself.blocks[block.hash] = block\ntrue\n"}},{"id":"save_transaction(transaction:Model::Transaction):Bool-instance-method","html_id":"save_transaction(transaction:Model::Transaction):Bool-instance-method","name":"save_transaction","doc":null,"summary":null,"abstract":false,"args":[{"name":"transaction","doc":null,"default_value":"","external_name":"transaction","restriction":"Model::Transaction"}],"args_string":"(transaction : Model::Transaction) : Bool","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr#L82","def":{"name":"save_transaction","args":[{"name":"transaction","doc":null,"default_value":"","external_name":"transaction","restriction":"Model::Transaction"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if self.transactions[transaction.hash]?\n  return false\nend\nself.pending_transactions[transaction.hash] = transaction\nself.transactions[transaction.hash] = transaction\ntrue\n"}},{"id":"transactions:Hash(TxnHash,Model::Transaction)-instance-method","html_id":"transactions:Hash(TxnHash,Model::Transaction)-instance-method","name":"transactions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(TxnHash, Model::Transaction)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr#L38","def":{"name":"transactions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(TxnHash, Model::Transaction)","visibility":"Public","body":"@@transactions || (@@transactions = Hash(TxnHash, Model::Transaction).new)"}}],"macros":[],"types":[{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Repo/BlockHash","path":"Node/Ledger/Repo/BlockHash.html","kind":"alias","full_name":"Node::Ledger::Repo::BlockHash","name":"BlockHash","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/ledger/repo.cr","line_number":10,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":true,"aliased":"String","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Repo","kind":"module","full_name":"Node::Ledger::Repo","name":"Repo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Repo/Height","path":"Node/Ledger/Repo/Height.html","kind":"alias","full_name":"Node::Ledger::Repo::Height","name":"Height","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/ledger/repo.cr","line_number":11,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":true,"aliased":"UInt64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Repo","kind":"module","full_name":"Node::Ledger::Repo","name":"Repo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Repo/ParentHash","path":"Node/Ledger/Repo/ParentHash.html","kind":"alias","full_name":"Node::Ledger::Repo::ParentHash","name":"ParentHash","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/ledger/repo.cr","line_number":9,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":true,"aliased":"String","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Repo","kind":"module","full_name":"Node::Ledger::Repo","name":"Repo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Repo/TxnHash","path":"Node/Ledger/Repo/TxnHash.html","kind":"alias","full_name":"Node::Ledger::Repo::TxnHash","name":"TxnHash","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/ledger/repo.cr","line_number":12,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger/repo.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":true,"aliased":"String","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/Repo","kind":"module","full_name":"Node::Ledger::Repo","name":"Repo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"gitlab.com/cocol/cocol/Node/Ledger/TxnHash","path":"Node/Ledger/TxnHash.html","kind":"alias","full_name":"Node::Ledger::TxnHash","name":"TxnHash","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cocol/node/ledger.cr","line_number":17,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/ledger.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":true,"aliased":"String","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Node/Ledger","kind":"module","full_name":"Node::Ledger","name":"Ledger"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"gitlab.com/cocol/cocol/Node/Settings","path":"Node/Settings.html","kind":"class","full_name":"Node::Settings","name":"Settings","abstract":false,"superclass":{"html_id":"gitlab.com/cocol/cocol/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"gitlab.com/cocol/cocol/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"gitlab.com/cocol/cocol/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cocol/node/settings.cr","line_number":4,"url":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/settings.cr"}],"repository_name":"gitlab.com/cocol/cocol","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"gitlab.com/cocol/cocol/Node","kind":"module","full_name":"Node","name":"Node"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"ident:UUID-instance-method","html_id":"ident:UUID-instance-method","name":"ident","doc":"TODO: Use ..::Struct::Node","summary":"<p><span class=\"flag orange\">TODO</span>  Use ..::Struct::Node</p>","abstract":false,"args":[],"args_string":" : UUID","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/settings.cr#L8","def":{"name":"ident","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UUID","visibility":"Public","body":"@ident"}},{"id":"ident=(ident:UUID)-instance-method","html_id":"ident=(ident:UUID)-instance-method","name":"ident=","doc":"TODO: Use ..::Struct::Node","summary":"<p><span class=\"flag orange\">TODO</span>  Use ..::Struct::Node</p>","abstract":false,"args":[{"name":"ident","doc":null,"default_value":"","external_name":"ident","restriction":"UUID"}],"args_string":"(ident : UUID)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/settings.cr#L12","def":{"name":"ident=","args":[{"name":"ident","doc":null,"default_value":"","external_name":"ident","restriction":"UUID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ident = ident"}},{"id":"master:Bool-instance-method","html_id":"master:Bool-instance-method","name":"master","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/settings.cr#L12","def":{"name":"master","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@master"}},{"id":"master=(master:Bool)-instance-method","html_id":"master=(master:Bool)-instance-method","name":"master=","doc":null,"summary":null,"abstract":false,"args":[{"name":"master","doc":null,"default_value":"","external_name":"master","restriction":"Bool"}],"args_string":"(master : Bool)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/settings.cr#L16","def":{"name":"master=","args":[{"name":"master","doc":null,"default_value":"","external_name":"master","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@master = master"}},{"id":"max_connections:Int32-instance-method","html_id":"max_connections:Int32-instance-method","name":"max_connections","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/settings.cr#L10","def":{"name":"max_connections","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@max_connections"}},{"id":"max_connections=(max_connections:Int32)-instance-method","html_id":"max_connections=(max_connections:Int32)-instance-method","name":"max_connections=","doc":null,"summary":null,"abstract":false,"args":[{"name":"max_connections","doc":null,"default_value":"","external_name":"max_connections","restriction":"Int32"}],"args_string":"(max_connections : Int32)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/settings.cr#L14","def":{"name":"max_connections=","args":[{"name":"max_connections","doc":null,"default_value":"","external_name":"max_connections","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@max_connections = max_connections"}},{"id":"miner:Bool-instance-method","html_id":"miner:Bool-instance-method","name":"miner","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/settings.cr#L11","def":{"name":"miner","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@miner"}},{"id":"miner=(miner:Bool)-instance-method","html_id":"miner=(miner:Bool)-instance-method","name":"miner=","doc":null,"summary":null,"abstract":false,"args":[{"name":"miner","doc":null,"default_value":"","external_name":"miner","restriction":"Bool"}],"args_string":"(miner : Bool)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/settings.cr#L15","def":{"name":"miner=","args":[{"name":"miner","doc":null,"default_value":"","external_name":"miner","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@miner = miner"}},{"id":"port:Int32-instance-method","html_id":"port:Int32-instance-method","name":"port","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/settings.cr#L9","def":{"name":"port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@port"}},{"id":"port=(port:Int32)-instance-method","html_id":"port=(port:Int32)-instance-method","name":"port=","doc":null,"summary":null,"abstract":false,"args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"}],"args_string":"(port : Int32)","source_link":"https://gitlab.com/cocol/cocol/blob/b0cadd224f06478ff0e29baa50accf610f5e10cf/src/cocol/node/settings.cr#L13","def":{"name":"port=","args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@port = port"}}],"macros":[],"types":[]}]}]}})